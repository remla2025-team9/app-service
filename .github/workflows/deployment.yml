name: Deployment

on:
  workflow_dispatch:

permissions:
  contents: write    
  packages:  write      
  
env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}

jobs:

  build-and-deploy:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4  
      with:
        fetch-depth: 0

    - name: Get current version
      id: get_version
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        release_branches: '_NONE_'
        pre_release_branches: main
        default_prerelease_bump: false      
        default_bump: false
        append_to_pre_release_tag: pre        
        tag_prefix: v

    - name: Resolve version
      id: version
      run: |
        PREVIOUS_TAG="${{ steps.get_version.outputs.previous_tag }}"
        RESOLVED_VALUE="" # Initialize variable

        if [[ "${{ github.ref }}" == refs/tags/v*.*.* ]]; then
          RESOLVED_VALUE="${GITHUB_REF#refs/tags/v}"
          echo "Triggered by tag push. Using version: $RESOLVED_VALUE"

        elif [[ -n "$PREVIOUS_TAG" ]]; then
          RESOLVED_VALUE="${PREVIOUS_TAG%-pre.*}"
          # RESOLVED_VALUE="${BASE_TAG_WITH_V#v}"
          echo "Not triggered by tag. Stripped pre-release from '$PREVIOUS_TAG' to get base version: $RESOLVED_VALUE"
        
        else
          # Handle cases where it's not a tag push AND no previous tag was found
          echo "::warning::Not a tag push and no previous tag found by 'get_version' step."
          echo "::error::Cannot resolve version."
          exit 1 # Fail the job if version can't be resolved

        fi

        echo "value=$RESOLVED_VALUE" >> "$GITHUB_OUTPUT"


    - name: Create stable git tag
      id: create_stable_tag
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        custom_tag: ${{ steps.version.outputs.value }}
        default_bump: false
        default_prerelease_bump: false
        tag_prefix: ""
    
    # Enables the runner to emulate different architectures
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    # Creates a builder instance capable of multi-platform builds
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Generate image metadata (tags, labels)
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}       
        tags: |
          type=sha,enable=false
          type=raw,value=latest
          type=raw,value=${{ steps.version.outputs.value }}

    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build & push docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags:   ${{ steps.meta.outputs.tags }}
        build-args: |
          APP_VERSION=${{ steps.version.outputs.value }}
        cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
        cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max,image-manifest=true

    - name: Bump patch and add pre tag
      id: bump_patch
      if: github.ref == 'refs/heads/main'
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        release_branches: '_NONE_'
        pre_release_branches: main
        default_prerelease_bump: prepatch      
        append_to_pre_release_tag: pre        
        tag_prefix: v
        default_bump: patch